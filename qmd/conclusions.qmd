# Conclusions and Recommendations {#sec-conclusions}

{{< include _setup.qmd >}}

As discussed in @sec-literature, there is a large base of literature discussing activity- and trip-based models and their differences, but much of that literature focuses primarily on the technical aspects of the respective models.
There is little research into the practicality of either model type that would be useful to an agency in deciding which type to use.
Therefore, while some of the conclusions presented here address quantitative differences between the two models, the more relevant discussion in this chapter relates to the subjective experience of configuring and using each model.

Specifically, this section focuses on potential "pain points" an agency may encounter when transitioning from a trip-based model to an ABM, both as discussed in the literature and from our experience in this research.
@miller_current_2023 notes several reasons agencies may not be adopting ABMs, as discussed in @sec-literature-lack-of-adpotion.
These reasons include computational inefficiency, complicated design, and lack of interoperability between areas.
Additionally, switching to an ABM would require an agency to expend resources on staff training, though notably this is true for switching to any new modeling system, regardless of model type.
The following sections address each of these difficulties in detail, and discusses our experience as relates to them.
Note that many of the conclusions presented here are specific to the WFRC model and our ActivitySim implementation, though many conclusions can apply to trip- and/or activity-based models more broadly.

## Computational Resources

The first potential difficulty for an agency transitioning to an ABM is the computational resources required to run the model.
This section discusses the hardware used to run both models in our research, as well as the model runtimes.

All runs of the WFRC model were done on a Windows 10 computer with 2 Intel Xeon Silver 4114 CPUs.
The CPUs have a base frequency of 2.2 GHz with a maximum turbo frequency of 3.0 GHz, and 10 cores/20 threads each.
The WFRC model is configured for multiprocessing in its destination and mode choice steps, and was configured to use 16 threads for our scenario runs.
This machine also has 128 GB of RAM installed.
There were not significant differences in runtimes between each model scenario, and each scenario had a runtime of 14--15 hours, not including the network assignment step.[^conclusions-1]
Notably, this is a specialized computer, but would not be prohibitively expensive to most agencies.

[^conclusions-1]: As discussed in @sec-methods, ActivitySim does not perform network assignment, while the WFRC model does.
    The runtimes presented here for the WFRC model therefore do not include the network assignment step in order to remain consistent between models.

Most runs of ActivitySim were done on nodes of the BYU supercomputer.
Each node runs Red Hat Enterprise Linux 7.9, and uses an AMD EPYC 7763 CPU at 2.45 GHz.
Each ActivitySim run requested 12 CPU cores and 360 GB of RAM.
A dedicated workstation with similar resources would again be a specialized computer, but again not prohibitively expensive.
Running in single-threaded mode (i.e. only one CPU core was utilized), each run took roughly 5 hours to complete, and used nearly all of the 360 GB of RAM available.
With multi-threading enabled, however, the runtimes decreased to around an hour per scenario, using 72% of the available CPU time across all 12 cores and 88% of the available RAM.
This is a huge difference in runtime between the two models, though crucially ActivitySim had 3 times as much RAM available for use.

ActivitySim can significantly reduce the RAM required, at the expense of increased runtimes, through "chunking" options [@asim-chunking], where large tables are loaded into RAM in chunks rather than all at once.
For comparison, we ran the baseline scenario in ActivitySim on the same computer used for the WFRC model scenarios, with chunking enabled to account for the amount of RAM available.
With multi-threading set to use 16 threads, and the chunk size set to 112 GB, the baseline ActivitySim scenario ran in about 13 hours.

ActivitySim completed its scenario runs faster than the WFRC model even on the same hardware, though the difference in runtime is relatively small compared with the ActivitySim runs on the BYU supercomputer.
This is counter to the idea that ABMs require increased resource and runtimes compared to trip-based models.
Notably, our experience is certainly not universal, and the runtime of any model will greatly depend on several factors, including the specific modeling software and the hardware configuration.
But at least in our case, ActivitySim outperformed the WFRC model with the same hardware, and was an order of magnitude faster when provided with enough RAM to avoid chunking.

Based on these results, an agency looking to switch to an ABM would likely not need additional computational resources beyond those used for trip-based models.
However, considering the potential gains in runtime (in the case of ActivitySim, given enough RAM to avoid chunking), it may be worth considering buying or renting additional computational resources.
Computer hardware prices certainly change over time, but as of early 2024, a 12-core, 360 GB RAM computer (using very rough price estimates) would likely cost a few thousand dollars.
Depending on the budget of a given agency, this expense may be worthwhile.

## Complication of Model Design

The second potential difficulty is the complication of an ABM's design.
ABMs are in theory more complicated than trip-based models, as ABMs model individuals rather than simply using aggregate values.
While ABMs may be more computationally intensive than trip-based models due to explicitly modeling individuals (though the previous section shows this is not always the case), our experience showed that this is not the same as being more *complicated*.
Though an ABM does require additional information as inputs, essentially only the synthetic population is additional compared to the requirements for a trip-based model.

<!-- In fact, the WFRC model is itself quite complicated, as it is set up to model.... -->

Even if ABMs are more complicated than trip-based models in operation, we found that they are in many ways simpler in interpretation.
The clearest example of this simplicity regards non--home-based trips.
Trip-based models model non--home-based trips quite abstractly, especially if (like the WFRC model) the model does not include a non--home-based trip redistribution step.
While the idea of a trip that does not begin or end at home is conceptually simple, it is difficult to model concretely in a trip-based model.
Homes may "produce" non--home-based trips, but it is not clear where the origins or destinations of those trips should be.
By contrast, the interpretation of non--home-based trips in an ABM is trivial.
Because trips in an ABM are organized into tours, it is easy to "follow" an individual throughout the day; each trip has an origin and destination consistent with the other trips in the tour.
"Non--home-based" trips are not really a concept in ABMs, as individuals simply make trips, some of which begin or end at home.

Additionally, each step of an ABM is straightforward to interpret.
Each step assigns each household or individual a specific value, such as the number of vehicles owned or the individual's DAP.
These assigned values can then be used in subsequent model steps.
In our ActivitySim implementation, for example, an individual's distance to work has a direct effect on their remote work status, which in turn affects the DAP assigned to that individual.
It is easy to then model a remote work "rebound effect"[^conclusions-2] by increasing the utility of a non-mandatory DAP for individuals who work remotely.
Since trip-based models exclusively deal with aggreagte data, the interpretation of each model step is more vague.
It is still possible to model a "rebound effect", for example (though the WFRC model does not), but

[^conclusions-2]: See @sec-remote-work-considerations

## Model Interoperability

A third potential difficulty is the interoperability/transferability of an ABM from one area to another.
Collaboration between agencies could be difficult if each ABM implementation is bespoke and tailored to a specific area.
We found, however, that at least with ActivitySim this is not the case.
In fact, ActivitySim is relatively easy to customize and extend.
Our ActivitySim implementation originally did not include remote work submodels, but it was simple to copy the remote work models from the SEMCOG example configuration into our implementation.
Some minor changes were made to ensure consistent variable names, but this process was not very involved.
Additionally, the SEMCOG remote work models did not include provisions for different remote work rates based on job industry as in the WFRC model, but it was simple to add these.[^conclusions-3]

[^conclusions-3]: The synthetic population we created has information on job industry for each worker, and so this was referenced in the remote work submodel in ActivitySim.

The WFRC model does already include different remote work rates by job industry, but it would be difficult to add in different rates based on e.g. vehicle ownership or TAZ average income.
It is worth noting though that this difficulty may be a result of the specific way that the WFRC model is written, and may not apply equally to all trip-based models.

## Training requirements

In order to change from a trip-based to an ABM, an agency will need to spend time to understand the model and train its staff.
We analyzed the time spent on each part of the modeling process for this project, and this section provides discussion on this.
Obviously the actual time an agency would require to transition to an ABM depends greatly on many factors such as specific staff experience, but this section is intended to give a very rough approximation of the time and effort needed.

Tables [-@tbl-time-spent-cube] and [-@tbl-time-spent-asim] show the amount of time spent on creating and analyzing each scenario in both models.
These are approximations, as detailed time logs are not available, but should serve to give a general idea of the time spent.
Note as well that these tables show time spent by one graduate and one undergraduate research assistant; more experienced modelers would likely require significantly less time to create and analyze similar scenarios.

```{r}
#| label: tbl-time-spent-cube
#| tbl-cap: Estimated Time Spent on Modeling Tasks (WFRC Model)

targets::tar_read(cube_time_spent_table) %>% 
	skbl(col.names = c("Task", "Hours spent (undergraduate RA)"), align = c("l", "c")) %>% 
	kable_styling()
```

```{r}
#| label: tbl-time-spent-asim
#| tbl-cap: Estimated Time Spent on Modeling Tasks (ActivitySim)

targets::tar_read(asim_time_spent_table) %>% 
	skbl(col.names = c("Task", "Hours spent (graduate RA)"), align = c("l", "c")) %>%
	kable_styling()
```

The overall time spent for ActivitySim is significantly more than that for the WFRC model, though most of the time for ActivitySim was spent on initial configuration.
In fact, once the baseline ActivitySim scenario had been configured, creating new scenarios often took very little time.
However, there are a few important notes about this comparison.

First, as discussed in @sec-methods, the WFRC model was taken essentially as-is for the baseline scenario.
Some configuration adjustments were required to run the WFRC model on our specific hardware, but these were quite minor.
ActivitySim on the other hand required a significant amount of initial configuration and calibration.
Notably, this initial time investment would be applicable for a switch to *any* new modeling framework regardless of type (trip- or activity-based), and many of the steps needed to configure ActivitySim would be required in configuring any model (whether trip- or activity-based), such as calibration efforts for mode choice and remote work.
The only major additional step in configuring our ActivitySim implementation over a trip-based model was creating the synthetic population.

Second, the scenarios in ActivitySim were somewhat dependent on the outputs of the WFRC model.
ActivitySim depends on the WFRC model's travel skims, as ActivitySim does not perform network assignment and so is unable to determine congested travel times on its own.
In the Transit scenario, for example, the only change needed for ActivitySim was to use updated transit skims, which was extremely quick to implement.
However, these updated skims came from the results of the WFRC model's Transit scenario, and so in some sense the time spent for ActivitySim should possibly include the time spent for the WFRC model.

Finally, the tasks were divided between two research assistants almost exclusively in line with the model type.
This means that Tables [-@tbl-time-spent-cube] and [-@tbl-time-spent-asim] are showing the time spent with each model type by a specific individual.
In other words, the difference between these tables is not only the model type, but also the individual working on the task.
Any comparisons between these tables should therefore take this into consideration.

## Recommendations

Our experience in this research runs counter to many of the commonly discussed "pain points" of ABM adoption.
Our ActivitySim implementation was no more computationally intensive than the WFRC model, we found relatively easy interoperability between the example MTC and SEMCOG ActivitySim configurations, and the amount of time and effort required to understand and configure ActivitySim was on the whole rather small.
Additionally, while ActivitySim may be more complicated "under the hood" than the WFRC model, the interpretation of ActivitySim is in some ways significantly simpler.
It is possible that these "pain points" are outdated, as there have not been many comparisons between model types in recent years (as discussed in @sec-literature-research-gap).

Our central recommendation, then, is for an agency considering transitioning to an ABM to recognize that some of the commonly-cited difficulties of ABMs may not actually be as relevant as initially thought.

There are, however, certainly still valid reasons for an agency to continue to use a trip-based model over an ABM.
Though in our experience the effort required to configure ActivitySim was not unreasonable, the effort was non-trivial.
An agency would need to spend time and effort to re-train its staff and modify its existing workflow pipeline.
Additionally, an agency switching to an ABM would lose conformity with previous analyses.
Comparing model results from before and after the transition could therefore be difficult, though this would depend on the specific comparisons desired.
In this research, we were for example able to make several direct comparisons between ActivitySim and the WFRC model (see Chapters [-@sec-landuse]--[-@sec-wfh]).

One crucial consideration to make is that ActivitySim does not perform network assignment.
Many agencies that currently use ActivitySim in fact use CUBE or other similar software to perform assignment, though there are also several open-source network assignment programs such as MATSim [@cite] and AequilibraE [@cite] that are also in use.
Regardless of the software used for network assignment, an agency will need to determine how best to integrate assignment into their modeling workflow in order to use ActivitySim.
This issue is specific to ActivitySim, and other ABMs may incorporate network assignment directly.
However, even ActivitySim itself is designed to be extensible, and as discussed above it is relatively easy to modify ActivitySim's model pipeline to allow for adding model steps.
This extensibility also includes the ability to add custom pipeline steps, so it would be possible to add a feedback loop between network skims/accessibility calculations and network assignment.

An additional point worth noting is that the scenarios chosen and the analyses demonstrated in Chapters [-@sec-landuse]--[-@sec-wfh] are only examples.
The number of scenarios and analyses that we could theoretically create is limitless, and we chose scenarios and analyses that we thought would illustrate well the differences between model types.
A common trend, though, is that for roughly the same amount of effort, we were able to perform more in-depth analyses with ActivitySim compared to the WFRC model.
This further shows that ABMs are not necessarily more difficult to work with than trip-based models, at least for analysis purposes.

The goal of this research is not to determine unilaterally which model type an agency should use, nor is the goal even to specify exact criteria under which an ABM should be used over a trip-based model.
Rather, the research presents our experience with both model types as an illustration for agencies to reference in determining which model type to use.
We therefore encourage each agency to review our findings in the context of their individual circumstances, and then determine which model type will best fulfill their specific modeling needs.
