# Conclusions and Recommendations {#sec-conclusions}

{{< include _setup.qmd >}}

Many of the conclusions presented here are specific to the WFRC model and our ActivitySim implementation.
However, some conclusions can apply to trip- and/or activity-based models more broadly, and it is noted when this is the case.

As discussed in @sec-literature, there is a large base of literature discussing activity- and trip-based models and their differences, but much of that literature focuses primarily on the technical aspects of the respective models.
There is little research into the practicality of either model type that would be useful to an agency in deciding which type to use.
Therefore, while some of the conclusions presented here address quantitative differences between the two models, the more relevant discussion in this section relates to the subjective experience of configuring and using each model.

The WFRC model was taken basically as-is, so essentially no configuration was needed, whereas ActivitySim required significant configuration to create an implementation for the Wasatch Front.
@sec-methods details the configuration for each model, but some key takeaways from this process are discussed here.

The first is that the only major additional step in configuring our ActivitySim implementation over a trip-based model was creating the synthetic population.
While ABMs are more complex than trip-based models "under the hood", we found that many of the steps needed to configure ActivitySim would be required in configuring any model (whether trip- or activity-based), such as calibration efforts for mode choice and remote work.

The second is that ActivitySim is relatively easy to customize and extend.
Our ActivitySim implementation originally did not include remote work submodels, but it was simple to copy the remote work models from the SEMCOG example configuration into our implementation.
Some minor changes were made to ensure consistent variable names, but this process was not very involved.
Additionally, the SEMCOG remote work models did not include provisions for different remote work rates based on job industry as in the WFRC model, but it was simple to add these.[^conclusions-1]
The WFRC model does already include different remote work rates by job industry, but it would be difficult to add in different rates based on e.g. vehicle ownership or TAZ average income.
It is worth noting though that this difficulty may be a result of the specific way that the WFRC model is written, and may not apply equally to all trip-based models.

[^conclusions-1]: The synthetic population we created has information on job industry for each worker, and so this was referenced in the remote work submodel in ActivitySim.

Additionally, each of our model scenarios (Chapters [-@sec-landuse]--[-@sec-wfh]) highlights a different aspect of travel demand modeling and allows us to focus on the differences between each model in specific ways.

Our largest takeaway from the Land Use scenario (@sec-landuse) is the difference in treatment of non--home-based trips between the model types.
Trip-based models model non--home-based trips quite abstractly, especially if (like the WFRC model) the model does not include a non--home-based trip redistribution step.
While the idea of a trip that does not begin or end at home is conceptually simple, it is difficult to model concretely in a trip-based model.
Homes may "produce" non--home-based trips, but it is not clear where the origins or destinations of those trips should be.

By contrast, the interpretation of non--home-based trips in an ABM is trivial.
Because trips in an ABM are organized into tours, it is easy to "follow" an individual throughout the day; each trip has an origin and destination consistent with the other trips in the tour.
"Non--home-based" trips are not really a concept in ABMs, as individuals simply make trips, some of which begin or end at home.

The Transit scenario (@sec-transit) highlights the individual nature of ABMs.
Because an ABM produces a list of trips with attached personal IDs, we are able to follow each individual throughout the day, and to some extent even between scenarios.
This allows us to see, for example, who "switched" modes after an improvement in commuter rail service (see Figures [-@fig-tr-mode-switching] and [-@fig-tr-atwork-switching]).
Additionally, this allows us to analyze the demographics of individuals using a specific mode, rather than being limited to aggregate data as in a trip-based model.

In the Remote Work scenario (@sec-wfh), we see two main differences between the models.
The first is that ActivitySim implicitly models a "rebound effect", where individuals working remotely on a given day may be more likely to make discretionary trips.
Research suggests the existence of such a rebound effect (see @sec-remote-work-considerations), so ActivitySim's ability to model the effect is useful.
The WFRC model, on the other hand, does not include any provisions for a rebound effect; the model simply decreases work trips as remote work rates increase.

The second difference is in the distribution of trip length.
The WFRC model does not account for distance to work in decreasing the number of trips produced, though remote work rates are different for each job industry.
Any change in the TLFD in the WFRC model is therefore a side-effect only of the geographic distribution of job industries.
ActivitySim, on the other hand, takes into account the distance to work for each individual in determining their remote work status.
Remote work status and distance to work are correlated [@moeckel_working_2017], and so the ability to model this relationship explicitly may be increasingly important as remote work rates continue to rise.

We additionally wish to highlight two aspects of this project that have not been discussed so far in this paper.
These are the computational resources used (and runtimes) for each model, and an analysis of the time spent in setting up each model and configuring each scenario.
These two aspects are only tangentially related to the results presented in Chapters [-@sec-landuse]--[-@sec-wfh], but would likely be as important to an agency looking to switch to an ABM.
The following two sections contain a discussion of these two aspects.

## Computational resources {#sec-computational-resources}

All runs of the WFRC model were done on a Windows 10 computer with 2 Intel Xeon Silver 4114 CPUs.
The CPUs have a base frequency of 2.2 GHz with a maximum turbo frequency of 3.0 GHz, and 10 cores/20 threads each.
The WFRC model is configured for multiprocessing in its destination and mode choice steps, and was configured to use 16 threads for our scenario runs.
This machine also has 128 GB of RAM installed.
There were not significant differences in runtimes between each model scenario, and each scenario had a runtime of 14--15 hours, not including the network assignment step.[^conclusions-2]
Notably, this is a specialized computer, but would not be prohibitively expensive to most agencies.

[^conclusions-2]: As discussed in @sec-methods, ActivitySim does not perform network assignment, while the WFRC model does.
    The runtimes presented here for the WFRC model therefore do not include the network assignment step in order to remain consistent between models.

Most runs of ActivitySim were done on nodes of the BYU supercomputer.
Each node runs Red Hat Enterprise Linux 7.9, and uses an AMD EPYC 7763 CPU at 2.45 GHz.
Each ActivitySim run requested 12 CPU cores and 360 GB of RAM.
Running in single-threaded mode (i.e. only one CPU core was utilized), each run took roughly 5 hours to complete, and used nearly all of the 360 GB of RAM available.
With multi-threading enabled, however, the runtimes decreased to around an hour per scenario, using 72% of the available CPU time across all 12 cores and 88% of the available RAM.
This is a huge difference in runtime between the two models, though crucially ActivitySim had 3 times as much RAM available for use.

ActivitySim can significantly reduce the RAM required, at the expense of increased runtimes, through "chunking" options [@asim-chunking], where large tables are loaded into RAM in chunks rather than all at once.
For comparison, we ran the baseline scenario in ActivitySim on the same computer used for the WFRC model scenarios, with chunking enabled to account for the amount of RAM available.
With multi-threading set to use 16 threads, and the chunk size set to 112 GB, the baseline ActivitySim scenario ran in about 13 hours.

ActivitySim completed its scenario runs faster than the WFRC model even on the same hardware, though the difference in runtime is relatively small compared with the ActivitySim runs on the BYU supercomputer.
This is counter to one of the reasons @miller_current_2023 gives for the relatively slow adoption of ABMs: their increased resource requirements and runtimes compared to trip-based models.
Notably, our experience is certainly not universal, and the runtime of any model will greatly depend on several factors, including the specific modeling software and the hardware configuration.
But at least in our case, ActivitySim outperformed the WFRC model with the same hardware, and was an order of magnitude faster when provided with enough RAM to avoid chunking.

## Analysis Time

In order to change from a trip-based to an ABM, an agency will need to spend time to understand the model and train its staff.
We analyzed the time spent on each part of the modeling process for this project, and this section provides discussion on this.
Obviously the actual time an agency would require to transition to an ABM depends greatly on many factors such as specific staff experience, but this section is intended to give a very rough approximation of the time and effort needed.

@tbl-time-spent shows the amount of time spent on creating and analyzing each scenario in both models.
These are approximations, as detailed time logs are not available, but should serve to give a general idea of the time spent.
Note as well that these tables show time spent by one graduate and one undergraduate research assistant; more experienced modelers would likely require significantly less time to create and analyze similar scenarios.

```{r}
#| label: tbl-time-spent
#| tbl-cap: time spent
#| tbl-subcap:
#|   - "WFRC Model"
#|   - "ActivitySim"
#| layout-nrow: 2

targets::tar_read(cube_time_spent_table) |>
	flextable() |>
	set_header_labels(task = "Task", hours = "Hours spent (undergraduate RA)") |>
	set_table_properties(layout = "fixed") |>
	width(1, 2.4) |>
	width(2, 1.5) |>
	align(j = ~ hours, align = "c", part = "a")

targets::tar_read(asim_time_spent_table) |>
	flextable() |>
	set_header_labels(task = "Task", hours = "Hours spent (graduate RA)") |>
	set_table_properties(layout = "fixed") |>
	width(1, 2.9) |>
	width(2, 1.1) |>
	align(j = ~ hours, align = "c", part = "a")
```

The overall time spent for ActivitySim is significantly more than that for the WFRC model, though most of the time for ActivitySim was spent on initial configuration.
In fact, once the baseline ActivitySim scenario had been configured, creating new scenarios often took very little time.
However, there are a few important notes about this comparison.

First, as discussed in @sec-methods, the WFRC model was taken essentially as-is for the baseline scenario.
Some configuration adjustments were required to run the WFRC model on our specific hardware, but these were quite minor.
ActivitySim on the other hand required a significant amount of initial configuration and calibration.
Notably, this initial time investment would be applicable for a switch to *any* new modeling framework regardless of type (trip- or activity-based).

Second, the scenarios in ActivitySim were somewhat dependent on the outputs of the WFRC model.
Notably, ActivitySim depends on the WFRC model's travel skims, as ActivitySim does not perform network assignment and so is unable to determine congested travel times on its own.
In the Transit scenario, for example, the only change needed for ActivitySim was to use updated transit skims, which was extremely quick to implement.
However, these updated skims came from the results of the WFRC model's Transit scenario, and so in some sense the time spent for ActivitySim should possibly include the time spent for the WFRC model.

Finally, the tasks were divided between two research assistants almost exclusively in line with the model type.
This means that @tbl-time-spent is showing the time spent with each model type by a specific individual.
In other words, the difference between these tables is not only the model type, but also the individual working on the task.
Any comparisons between these tables should therefore take this into consideration.

## Recommendations

The goal of this paper is not to determine unilaterally which model type an agency should use, nor is the goal even to specify criteria under which an ABM should be used over a trip-based model.
Rather, the paper presents our experience with both model types as an illustration for agencies to reference in determining which model type to use.
However, we do highlight some considerations that would apply broadly.

The first consideration is the increased complexity of an ABM over a trip-based model.
An ABM does require additional information as inputs, but essentially only the synthetic population is additional compared to the requirements for a trip-based model.
Additionally, an ABM has many submodels, each of which require calibration.
This is true in a trip-based model as well, though each submodel in an ABM is likely more complex than in a trip-based model because an ABM can utilize all individual and household variables in every submodel, rather than relying on aggregate data.

The increased complexity of an ABM does not necessarily require more computational resources and/or runtime, however, as discussed in @sec-computational-resources.
An agency looking to switch to an ABM would likely not need additional computational resources beyond those used for trip-based models.
However, considering the potential gains in runtime (in the case of ActivitySim, given enough RAM to avoid chunking), it may be worth considering buying or renting additional computational resources.
Computer hardware prices certainly change over time, but as of early 2024, a 12-core, 360 GB RAM computer (using very rough price estimates) would likely cost a few thousand dollars.
Depending on the budget of a given agency, this expense may be worthwhile.

Additionally, while an ABM may be more complex than a trip-based model at a technical level, conceptually an ABM is often much more straightforward.
Because an ABM models individuals, it is easy to concretely interpret what is happening at each step in the model.
For example, individuals are assigned a work/school location, remote work status, etc., and households are assigned a number of vehicles owned.
These values are persistent throughout the model, and so in subsequent steps such as mode choice an individual's assigned mode is based on their specific circumstance.
This level of abstraction is far less than in a trip-based model, where for example mode choice assigns a percentage of all trips between two zones to each mode based on aggregate data.

One crucial consideration to make is that ActivitySim does not perform network assignment.
Many agencies that currently use ActivitySim in fact use CUBE or other similar software to perform assignment, though there are also several open-source network assignment programs such as MATSim [@cite] and AequilibraE [@cite] that are also in use.

Regardless of the software used for network assignment, an agency will need to determine how best to integrate assignment into their modeling workflow in order to use ActivitySim.
This issue is specific to ActivitySim, and other ABMs may incorporate network assignment directly.
However, even ActivitySim itself is designed to be extensible, and as discussed above it is relatively easy to modify ActivitySim's model pipeline to allow for adding model steps.
This extensibility also includes the ability to add custom pipeline steps, so it would be possible to add a feedback loop between network skims/accessibility calculations and network assignment.

In general, an agency may wish to consider switching to an ABM if in-depth analysis is desired.
While trip-based models may or may not be able to accurately predict the number of vehicles on a road segment as well as an ABM, the outputs of a trip-based model are abstracted to a much greater degree than the outputs of an ABM.
For relatively uncomplicated regions, such as many low-density areas, there may not be much need for the depth of analysis an ABM offers.
However, for more complex urban areas, the complexity of an ABM may be required in order to encapsulate the intricacies of travel behavior to an acceptable level.
