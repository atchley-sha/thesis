# Methodology {#sec-methods}

{{< include _setup.qmd >}}

This paper seeks to compare methodological differences between trip- and activity-based modeling frameworks.
Both model types have a wide variety of implementations, as individual agencies will adjust the basic model framework to match their specific needs.
It would be unreasonable to compare each of the various implementations of both model types.
Instead, a representative model is used for both types, and care is taken to note when results apply to trip- or activity-based models generally, and when results are specific to the models used.

The representative trip-based model is the 2019 Wasatch Front Regional Council (WFRC) travel demand model, which covers much of the Salt Lake City-Provo-Ogden, Utah Combined Statistical Area.
An ActivitySim implementation in the same study area is used as a representative activity-based model (ABM).
Both models are discussed in detail in the following sections.

Note that the focus is not on comparing model accuracy or performance, but rather on comparing the process of using each model, including the types of analyses that can be performed.
There are therefore few direct comparisons of model outputs between each type.
Instead, this research highlights the strengths and weaknesses of each model type in planning and policy analysis, and illustrates these differences.

## WFRC Model

The WFRC model is implemented in the CUBE software by Bentley [@bentley_systems_cube], and is currently used by WFRC for modeling travel in the Salt Lake City, Utah area.
WFRC provided the model directly, including land use forecasts and the current long-range transportation plan.
The model is taken essentially as-is, with no changes other than those noted in Chapters [-@sec-landuse]--[-@sec-wfh] to implement the scenarios studied in this research.

The WFRC model, like many trip-based models, requires the following inputs:

-   Land use data, including information about population, employment, and socioeconomic variables such as income, delineated by transportation analysis zone (TAZ). This is provided by WFRC directly, as an output of their land use forecasting model(s).
-   Travel skims detailing travel time, cost, etc. between each origin-destination pair of TAZs. The WFRC model uses an iterative process of assigning volumes to the transportation network and recalculating the skims, which are used in the destination and mode choice model steps.
-   Transportation networks, including highway, transit, etc.\\\@ networks which connect the TAZs to each other. These networks contain information such as link speed and capacity. Though the WFRC model assigns travel volumes to the network, this paper does not analyze the model's network assignment results. However, the network volumes are still used to calculate the loaded network skims.
-   Lookup tables, used in many model steps for information such as trip rates by household type. These are taken directly from the WFRC model without modification.
-   Model constants and coefficients, which some model steps such as mode choice require for calibration. These are also taken directly from the WFRC model.

@fig-wfrc-flowchart gives an overview of the WFRC model, showing broad model steps in a flowchart.
Like many trip-based models, the WFRC model follows the "four-step" approach and has main steps of trip generation, trip distribution, mode choice, and network assignment.
The model also includes a disaggregation step at the beginning where the TAZ-level data is used via lookup tables to estimate the number of households by size, income group, number of workers, and auto ownership.
This does not create a fully synthetic or disaggregated population, but is more segmented than the initial TAZ-level data.

![WFRC model flowchart. Note the feedback loop in the distribution step where preliminary loaded network skims are used to perform subsequent iterations of trip distribution until the distribution converges.](./../images/wfrc_flowchart.png){#fig-wfrc-flowchart fig-scap="WFRC model flowchart."}

The disaggregation step takes TAZ-level socioeconomic data (such as population, number of households, and average income) and estimates the number of households belonging to each category of household size, number of workers, income group, and vehicle ownership.
The categories of household size, number of workers, and vehicle ownership are "capped" at 6, 3, and 3, respectively, i.e. every household with 3 or more workers is grouped into a "3+ workers" category.
The specific income groups used in the WFRC model are given in @tbl-income-groups.

```{r}
#| label: tbl-income-groups
#| tbl-cap: Income Groups in the WFRC Model

targets::tar_read(income_groups) %>%
  select(group, inc_range) %>%
  rename("Income Group" = group, "Income Range" = inc_range) %>%
	skbl() %>%
	kable_styling()
```

There is an additional distribution estimated, which is termed "life cycle" in the WFRC model.
This distribution places households into one of three categories, intended to represent the presence of children and/or working adults in the household.
This is done by estimating the age distribution in each TAZ and categorizing each household based on @tbl-lif-cyc-categories.

```{r}
#| label: tbl-lif-cyc-categories
#| tbl-cap: Life Cycle Categories in the WFRC Model

tribble(
  ~"Life Cycle", ~"0\u201318", ~"18\u201364", ~"65+",
  1, "x", "y", "x",
  2, "y", "y", "x",
  3, "y", "x", "y"
) %>%
	mutate(across(-`Life Cycle`, \(x) if_else(
		x == "y",
		"\u2713",
		# "Y",
		# "\u2717"
		"\u2014"
		))) %>%
	skbl() %>%
	kable_styling() %>%
	add_header_above(c(" " = 1, "Presence of persons in household aged:" = 3)) %>% 
	column_spec(2:4, ".9in")
```

The disaggregated household data is then used in the trip generation step to estimate the number of trips produced from each TAZ.
The trips are estimated using lookup tables which assert an average number of trips for each household type.
There are separate lookup tables for each trip purpose, and depending on the trip purpose the lookup table uses a different household classification.
The trip rates in the lookup tables are multiplied by the number of households in each category, and this gives a total number of trips by purpose produced in each TAZ.

The WFRC model contains the following trip purposes: Home-based Work, Home-based Shopping, Home-based School, Home-based Other, Non--home-based Work, and Non--home-based Non-work.
The Home-based Work and Non--home-based Work purposes use only the number of workers per household in determining trip productions, and all other trip purposes use the cross-classification of household size with life cycle.

Trip attractions are estimated for each purpose based mostly on the number of jobs by industry in each TAZ.
Home-based other and non--home-based trip attractions also are affected by the number of households in a TAZ, and school attractions are based on the school enrollment by TAZ.
Each purpose has a different coefficient for each variable, and these are left unchanged from the existing values.

Trip distribution uses a gravity model of the form\
$$
T_{ij} = P_i \times \frac{A_j  F_{ij}}{\displaystyle \sum_J A_j  F_{ij}},
$$\
where $T_{ij}$ is the number of trips from zone $i$ to $j$, $P_i$ is the productions at $i$, $A_j$ is the attractions at $j$, $F_{ij}$ is the cost term/function from $i$ to $j$, and $J$ is the set of all zones trips from $i$ can be attracted to.

The mode choice step uses a choice model to assign a percentage of trips of each purpose to each mode, and network assignment is done via an iterative process to equalize travel time between potential routes.
The WFRC model outputs include trip tables by purpose, mode, and time of day, as well as loaded network skims.

## ActivitySim

ActivitySim is an open-source ABM led by a consortium of transportation planning agencies.
ActivitySim is highly configurable, and many agencies have their own bespoke implementation.
This paper uses an ActivitySim implementation based on the one used in @macfarlaneEstimationSimulationDaily2021, which is in turn based on the prototype configuration for the Metropolitan Transportation Commission serving the San Francisco area [@erhardt_mtcs_2011].
The exact implementation is available on GitHub.[^methods-1]

[^methods-1]: [<https://github.com/byu-transpolab/wfrc_asim_scenario/tree/update-abm-illustration>]{.content-visible when-format="html"} [[https://github.com\slash byu-transpolab\slash wfrc_asim_scenario\slash tree\slash update-abm-illustration](https://github.com/byu-transpolab/wfrc_asim_scenario/tree/update-abm-illustration)]{.content-visible when-format="pdf"}

ActivitySim requires similar inputs to the WFRC model, though it does not assign traffic and so does not require any transportation networks.
However, ActivitySim does require network skims for information on travel time, cost, etc.
These skims are obtained from any network assignment process, though ActivitySim itself does not include network assignment.
A discussion and comparison of network assignment processes is outside the scope of this project, so this ActivitySim implementation uses the travel skims output from the WFRC model directly.
In practice, ActivitySim is mated to CUBE or another network assignment algorithm for network skimming and travel time feedback.

ActivitySim additionally requires population data at an individual level, including information such as age, household income, and home location.
Due to privacy concerns, real data is rarely used for this purpose, and a synthetic population representative of the study area is used instead.
@sec-populationsim discusses the population used in more detail.

ActivitySim, like all ABMs, simulates transportation decisions on an individual level.
ActivitySim has a hierarchical decision tree, where long-term decisions (such as auto ownership and telecommute frequency) are made first, followed by daily and tour- and trip-level decisions such as scheduling and mode choice (see @fig-asim-flowchart).
Each of these steps determines information that will be used in subsequent steps, and many steps can be turned on or off depending on what is needed for the model implementation.

![ActivitySim sub-model flowchart. Long-term decisions are made first, followed by more granular ones. @associationofmetropolitanplanningorganizationsExamplesActivitySim2022.](../images/abmexample.jpg){#fig-asim-flowchart fig-scap="ActivitySim sub-model flowchart."}

The steps can broadly be categorized into five groups, as shown in @fig-asim-flowchart: aggregate, household/personal, daily, tour-level, and trip-level steps.
The aggregate steps mainly involve determining impedance measures between each pair of zones (travel time, distance, cost, etc.).
In this case, these impedances are supplied directly as the network skims output from the WFRC model.

The household/personal steps relate to long-term decisions that are unlikely to change quickly based on daily transportation conditions.
These steps include determining remote work status, work/school location, auto ownership, transit pass ownership, and free parking availability at work.
Our ActivitySim implementation models remote work status, work/school location, auto ownership, and free parking availability, but transit pass ownership is not modeled and it is assumed that everyone pays the transit fare.

The daily decisions primarily concern an individual's \acr{DAP}.
ActivitySim contains a step to assign mandatory, non-mandatory, and home DAPs based on personal and household information (a home DAP involves no travel).
For example, full-time workers are more likely to have a mandatory DAP than part-time workers, all else being equal.

Once a DAP is chosen, ActivitySim creates tours for each major activity in the day.
Additionally, ActivitySim determines if an individual makes an "at-work" tour (e.g. leaving for lunch and returning to the workplace).
Each tour is scheduled and assigned a primary mode, as well as a primary destination for non-mandatory and joint tours.
The tours are then populated with trips, and ActivitySim assigns each trip a purpose, destination, time of day, and mode compatible with the tour-level assignment.

The final steps of ActivitySim are writing output trip matrices and other tables, including information on land use, persons, households, tours, and trips.
<!-- This can also include writing summary tables of the above information. -->

Most of ActivitySim's individual models are based on a multinomial logit model of the form:\
$$
P(k) = \frac{e^{V_k}}{\displaystyle \sum_{k \in K} e^{V_k}},
$$\
where $P(k)$ is the probability of choosing alternative $k$, $V_k$ is the utility of alternative $k$, and $K$ is the set of all alternatives [as discussed in @mcfaddenMeasurementUrbanTravel1974].
The utility values are determined by coefficients on variables such as income, age, and work status, in addition to calibration constants for each alternative.

### PopulationSim {#sec-populationsim}

This research uses PopulationSim [@populationsim_2023] to create a synthetic population for ActivitySim.
The synthetic population aims to be representative of the study area while maintaining privacy.
Additionally, a synthetic population can be adjusted in line with projected socioeconomic forecasts to perform future-year analyses.
PopulationSim takes as input a "seed" of individuals and households, and populates the area with copies of these to match given control totals.

The seed sample comes from the 2019 American Community Survey Public Use Microdata Sample [@pums], which contains a sample of actual (anonymized) individuals and households at the Public Use Microdata Area (PUMA) geography (PUMAs partition the United States into areas of around 100,000 people each [@puma]).
The control totals come from two different sources: the U.S.
Census and the WFRC model.
@tbl-control-totals shows these controls as well as their geographic level and source.
The geography of a control dictates PopulationSim's "level of precision" in matching the control totals.
For example, with our configuration, PopulationSim will attempt to match the average number of workers per household to the Census average for each Census tract, while the total population is only controlled for across the entire region.
PopulationSim also allows setting different weights to each control, and @tbl-control-totals gives this information as well.
Because the Public Use Microdata Sample does not contain every possible combination of variable values, it is not possible to create a synthetic population that perfectly matches every control total.
The weights allow certain controls to "take priority" over others; for example with this configuration PopulationSim will prioritize the average household size over the average number of workers per household if the two controls cannot both be satisfied.

```{r}
#| label: tbl-control-totals
#| tbl-cap: PopulationSim Control Totals by Geography and Source

tibble::tribble(
  ~Control, ~Geography, ~Source, ~Weight,
  "Population", "Entire Region", "Census", 5000,
  "Number of Households", "TAZ", "WFRC Model", 1000000000,
  "Household Size", "Census Tract", "Census", 10000,
  "Persons by Age Group", "Census Tract", "Census", 10000,
  "Households by Income Group", "Census Tract", "Census", 500,
  "Workers per Household", "Census Tract", "Census", 1000
) %>%
	mutate(Weight = label_comma()(Weight)) %>%
	skbl(align = c("l", "l", "l", "r")) %>%
	kable_styling()
```

Most of these controls come from Census data, with only the number of households per TAZ coming from the WFRC model data.
Note also that there are many personal and household variables that are not accounted for in these controls, such as sex, vehicle ownership, internet access, etc.
These variables are not controlled for and are dependent on which seed persons or households are copied in controlling for the other variables.
However, this process is assumed to still give a representative enough estimate for the uncontrolled variables without needing to model them explicitly.

The outputs of PopulationSim include a persons and households table comprising the synthetic population.

## Initial Model Comparison/Calibration

While this research generally does not directly compare the outputs of ActivitySim to those of the WFRC model, it is important to ensure similar performance between the two models for meaningful analyses.
As such, a baseline scenario in both models is used in order to calibrate the ActivitySim implementation to the WFRC model.
This baseline scenario uses the 2019 WFRC model as-is.
For ActivitySim, the baseline scenario uses 2019 Census and WFRC data to create the synthetic population, and uses land use data and network skims from the baseline WFRC scenario for accessibility and socioeconomic measures.

### Validation of the Synthetic Population

The controls for PopulationSim mostly come from the Census, as can be seen in @tbl-control-totals.
However, the WFRC model contains TAZ-level data including population and median income.
The WFRC model also has a disaggregation step that estimates the number of households by size and income group.
This section compares the output of PopulationSim to the WFRC model on each of these variables.
Though these outputs are given at the TAZ level, most controls to PopulationSim were given at the Census tract level, and these tracts are not a one-to-one match with the region's TAZs.
Because of this, PopulationSim has some amount of randomness in which TAZ it places each household in, and so at small geographies such as TAZs the error distribution between the two models is noisy.
The comparisons in this section are therefore made by aggregating each TAZ at the district level.

@fig-population-comparison shows the difference in district population between PopulationSim and the WFRC data.
It is worth noting that since the number of households was controlled at the TAZ level from the WFRC data with an extremely high weight, the number of households per TAZ in the synthetic population match exactly to the WFRC data.
The average household size will therefore follow a similar error distribution to the one shown in @fig-population-comparison.

```{r}
#| label: fig-population-comparison
#| fig-cap: Population by district, PopulationSim compared to the TAZ-level socioeconomic data in the WFRC Model.

targets::tar_read(comparison_pop_map)
```

The population per district is similar to the WFRC data in most places, though there are some discrepancies especially near Herriman and Lehi.
Since total population is a region-level control, but number of households is a TAZ-level control, this shows PopulationSim is predicting a smaller average household size in Herriman and Lehi than the WFRC data suggests.
<!-- This may be reasonable, as these are suburban areas which are likely to have larger household sizes on average than places like Salt Lake City. -->

Income is also an important factor in travel behavior [@zegras_household_2007], and @fig-median-income-comparison shows a district-level comparison of median income between the synthetic population and the WFRC data.
The synthetic population does have a lower median income than the WFRC data in many districts, but the error is in most cases fairly small, especially in more populated areas.

```{r}
#| label: fig-median-income-comparison
#| fig-cap: District-level median income, PopulationSim compared to the TAZ-level socioeconomic data in the WFRC Model.

targets::tar_read(comparison_med_income_map)
```

However, both the WFRC model and ActivitySim use household income *groups* rather than individual household income to inform travel decisions.
These groups are taken from the WFRC model (see @tbl-income-groups), and the groups in PopulationSim and ActivitySim were adjusted to match.
@fig-income-group-map shows the difference in number of households by income group.
This figure shows PopulationSim predicting slightly more high-income households, though the error for the lower three groups is more evenly distributed, especially in more populated areas.

```{r}
#| label: fig-income-group-map
#| fig-cap: Households in each income group, PopulationSim compared to the TAZ-level socioeconomic data in the WFRC Model.
#| fig-env: sidewaysfigure
#| fig-width: 8
#| fig-height: 3.5
#| fig-pos: p

targets::tar_read(comparison_inc_groups_map)
```

Note that in the synthetic population, each household has a specific income and so can be grouped directly, while the WFRC model requires a disaggregation step to estimate the number of households in each income group.
@fig-income-group-map therefore is comparing two income disaggregation models, one a part of PopulationSim and the other in the WFRC model, rather than comparing the synthetic population to actual socioeconomic data.
With this in mind, the difference shown in @fig-income-group-map is within an acceptable margin of error.

Additionally, the overall distribution of income is similar between the models, as @fig-median-income-density shows.
A production-ready synthetic population would match its income distribution more closely to the existing WFRC model, but for the purposes of this research the income distribution of the synthetic population is acceptable.

```{r}
#| label: fig-median-income-density
#| fig-cap: Distribution of TAZ median income, PopulationSim compared to the TAZ-level socioeconomic data in the WFRC Model.

targets::tar_read(comparison_inc_density_plot) +
	theme(legend.position = "bottom")
```

<!-- ***Comparison of number of workers?*** -->

### Validation and Calibration of ActivitySim {#sec-baseline-calibration}

This section compares the outputs of both models to verify that trip patterns roughly agree between them.
There are three comparisons of interest that we make between the outputs of the two models: mode split, trip length frequency distribution, and remote work.

The initial baseline ActivitySim scenario predicted a mode split significantly different to that from the WFRC model, and so calibration efforts were needed.
The ideal approach would be to calibrate the mode choice model to recent travel survey data, such as from the Utah Household Travel Survey.
However, recent travel survey data was not available for this project, and only a rough calibration is needed for the purposes of this research.
We therefore used the outputs of the baseline WFRC model scenario as mode split targets.
A production model would certainly use travel survey data and perform a thorough calibration, but that is outside the scope of this project.

Before beginning calibration, we created a crosswalk between the available modes in ActivitySim and in the WFRC model.
The available modes between ActivitySim and the WFRC model are not incredibly different, and in fact many modes have a 1-to-1 match between the models.
However, some adjustment was needed, and @tbl-mode-crosswalk shows the adjustments that were made.

ActivitySim additionally has ridehail modes, but the WFRC model does not, and so there are no obvious calibration targets for ridehail.
Based largely on the model results of @dayForecastingRideHailingMultiple2022, and partly on the existing (uncalibrated) mode split in ActivitySim, we asserted the following mode shares for ridehail: 0.015% for Home-based Work trips, 0.38% for Home-based Other trips, and 0.4% for Non--home-based trips.

```{r}
#| label: tbl-mode-crosswalk
#| tbl-cap: Crosswalk Between Modes in Both Models

targets::tar_read(mode_crosswalk) %>%
	mutate(across(`Calibration Mode`, str_to_title)) %>%
	skbl(align = "l") %>%
	kable_styling() %>% 
	column_spec(1, "1.2in", latex_valign = "m") %>% 
	column_spec(2, "1.4in", latex_valign = "m") %>% 
	column_spec(3, "1.9in", latex_valign = "m")
```

Additionally, since the WFRC model has a significantly different mode split depending on the trip purpose, we calibrated each trip purpose individually.
However, a crosswalk of trip purposes between the models is more complicated than the crosswalk for modes.
Because ABMs create tours first, which are then populated with trips, an ABM's idea of "trip purpose" is entirely different to that of a trip-based model.
Specifically, an ABM doesn't have a concept of e.g. "home-based work" trips, there are simply trips on a "work" tour, some of which have an origin or destination at home.
For simplicity, though, we converted the trips from ActivitySim into purposes that roughly match the WFRC model's purposes.
Any trip that doesn't start or end at home is considered a Non--home-based trip, and if a trip starting or ending at home has its other end at work, it is considered a Home-based Work trip.
All other trips are considered Home-based Other trips.

To perform the calibration, the output mode split of ActivitySim for each purpose was compared to the target mode split output from the WFRC model.
An adjustment value was determined by the formula $A_k = \ln(T_k/M_k)$, where $A_k$ is the adjustment value for mode $k$, $T_k$ is the target mode share of mode $k$, and $M_k$ is the ActivitySim-predicted mode share of mode $k$.
This adjustment value was added to the current alternative-specific constants (ASCs) in the ActivitySim configuration, and this process was repeated iteratively until calibration was satisfactory.

There are two aspects of this calibration process worth noting.
The first is that ActivitySim contains ASCs for both tour mode choice and trip mode choice, where the tour mode is the principal mode used on the tour, and the trip mode is the mode of the individual trip (for example, there could be a "walk" trip on a "transit" tour).
Because tour-level mode choice influences trip mode choice, both the tour-level and trip-level ASCs were adjusted by the calculated adjustment value for each mode.
The second is that while it is possible to categorize ActivitySim trips into purposes similar to a trip-based model, ActivitySim does not do this conversion internally.
ActivitySim *does* have separate ASCs by purpose, but these purposes are ActivitySim's tour purposes, rather than purposes resembling those in a trip-based model.
Though it is not a perfect correspondence to how the adjustment values were calculated, we adjusted the ASCs as follows: All ActivitySim "atwork" ASCs are calibrated with the Non--home-based adjustment, all "work" ASCs are calibrated with the Home-based Work adjustment, and all other ASCs are calibrated with the Home-based Other adjustment.

@fig-mcc-adjustments shows the mode split from ActivitySim compared against the target mode split for each iteration of calibration.
After a few iterations, the mode split more closely matches between the models; however, there are still some discrepancies.
ActivitySim has mode choice ASCs separated not only by mode and purpose, but also by many personal variables, such as income, age, and vehicle ownership.
The difference across these categories was left unchanged, and all ASCs for a given mode and purpose were adjusted equally.
Our ActivitySim configuration is ultimately based on the San Francisco area, and so coefficients on variables such as travel time and income are calibrated for that area.
Additionally, we did not calibrate the vehicle ownership model, and this may be partly the cause of the discrepancies.

```{r}
#| label: fig-mcc-adjustments
#| fig-cap: Mode choice calibration, target vs. actual shares over several iterations.
#| fig-env: sidewaysfigure
#| fig-width: 8
#| fig-height: 4.5
#| fig-pos: p

targets::tar_read(mcc_adjustments_plot)
```

In any case, we chose the calibration at Iteration 4 for the final ASC values, as subsequent iterations adjusted the ASCs without changing the mode split very much.
At subsequent iterations ActivitySim was also less sensitive to changes in infrastructure due to over-calibration, which would not allow for effective policy analysis.
@tbl-mode-split compares the mode split of both models after iteration 4 of calibration.
Overall, the calibration resulted in a reasonably similar mode split between the two models, though there are still discrepancies (e.g. ActivitySim is predicting significantly more transit trips compared to the WFRC model).
While the calibration is not perfect, for the purposes of this research this calibration is reasonable enough.

```{r}
#| label: tbl-mode-split
#| tbl-cap: Comparison of Mode Split Between Models After Calibration

targets::tar_read(mc_comparison) %>%
	mutate(wfrc_share = if_else(mode == "Ridehail", "\u2014\u00b9", wfrc_share)) %>%
	ungroup() %>%
	`colnames<-`(c("Purpose", "Mode", "Trips", "Share", "Trips", "Share")) %>%
	skbl(digits = 0) %>%
	kable_styling() %>%
	add_header_above(c(" " = 2, "ActivitySim" = 2, "WFRC Model" = 2)) %>%
	collapse_rows(1, latex_hline = "major") %>%
	footnote(number = "Ridehail mode shares were asserted for mode choice calibration, but are not counted here", threeparttable = TRUE)
```

@fig-tlfd-comp compares the trip length frequency distribution of the two models by mode and purpose.
Both ActivitySim and the WFRC model contain trip distribution steps which can be adjusted to affect the distribution of trip length.
However, as the figure shows, the two models have similar TLFDs, so no adjustment was necessary.
The most significant discrepancies are with transit trips, again likely due to this configuration of ActivitySim being developed for San Francisco, making transit more attractive.
Note that though these distributions match well enough for the purposes of this research, further calibration would be required to create a production-ready ActivitySim implementation.

```{r}
#| label: fig-tlfd-comp
#| fig-cap: Comparison between models of trip length frequency distribution.
#| fig-width: 6.5
#| fig-height: 8

targets::tar_read(combined_by_tlfd_plot) +
	scale_color_bright()
```

The WFRC model has basic support for predicting telecommuting and work-from-home trips.
This includes a lookup table of telecommute percentages based on job type and year.
ActivitySim also has this functionality, and can additionally use individual- and household-level variables in its predictions.
It is worth noting that both the WFRC model and ActivitySim make a distinction between "telecommuting", where an individual commutes to work some days and does not others, and "work-from-home" (called "home-based jobs" in the WFRC model), where an individual's workplace is always at their home.

The ActivitySim implementation discussed in @macfarlaneEstimationSimulationDaily2021 does not include any submodels related to remote work.
However, a separate ActivitySim implementation, developed for the Southeast Michigan Council of Governments (SEMCOG) metropolitan planning organization in Michigan, *does* include these submodels, and our ActivitySim implementation takes these submodels directly from the SEMCOG implementation.
Some modifications to the remote work submodels were needed for compatibility, but these modifications were minor and mostly involved ensuring the variable names from the SEMCOG submodels were consistent with the existing implementation.

Both models treat "work-from-home"/"home-based jobs" similarly.
The WFRC model's land use data contains employment by type in each TAZ, and it considers a "home-based job" as a separate job type, so these are not counted toward employment totals in trip generation and subsequent steps.
ActivitySim has a "work from home" submodel which assigns workers work-from-home status based on personal variables such as income, sex, and education (coefficients on these variables were left unchanged from the existing configuration, see @tbl-asim-wfh-model-coeffs).
There is also a "target work-from-home percent" value that adjusts the model to reach the specified work-from-home proportion of all workers.
Individuals with work-from-home status are then prohibited from making a mandatory tour.
This target work-from-home percentage is set at 2.3%, based on a weighted average from the WFRC model data.
We made no other adjustments to the ActivitySim work-from-home submodel.

```{r}
#| label: tbl-asim-wfh-model-coeffs
#| tbl-cap: Work-From-Home Submodel Coefficients in ActivitySim

targets::tar_read(asim_wfh_model_coeffs) %>%
	skbl(align = c("l", "c"), digits = 3) %>%
	kable_styling()
```

The two models differ in their approach to telecommuting, however.
The WFRC model has a lookup table of telecommuting shares based on job type (see @tbl-baseline-telecommute), including predictions for future years.
ActivitySim has a "telecommute frequency" submodel which assigns workers a telecommute status indicating the number of days they work remotely per week.
Based on this status, ActivitySim adjusts the likelihood of selecting a mandatory DAP.
Telecommute status depends on personal variables similar to those in the work-from-home submodel by default.
Notably, the telecommute frequency submodel also includes adjustments based on an individual's distance to work.
No other changes were made to the existing variables in this submodel, and @tbl-asim-tc-model-coeffs shows the submodel coefficients.

```{r}
#| label: tbl-asim-tc-model-coeffs
#| tbl-cap: Telecommute Frequency Submodel Coefficients in ActivitySim

targets::tar_read(asim_telecommute_model_coeffs) %>%
	filter(
		!Description %in% c(
			"temp_calibration", "not sure, unused",
			"Retail", "Food", "Manufacturing", "Government and education",
			"Office", "Health", "other", "Agriculture", "Mining", "Construction"),
		!if_all(-Description, \(x) x == 0)) %>%
	mutate(Description = str_to_sentence(Description)) %>%
	rename(
		"1 day" = `1_day_week`,
		"2\u20133 days" = `2_3_days_week`,
		"4 days" = `4_days_week`
	) %>%
	skbl(align = c("l", "c", "c", "c")) %>%
	kable_styling() %>%
	add_header_above(c(" ", "Telecommute Frequency Coefficients" = 3)) %>% 
	column_spec(2:4, "0.87in")
```

In order to calibrate ActivitySim's telecommute frequency submodel to the WFRC data, however, we added additional job type variables to ActivitySim to match those given in @tbl-baseline-telecommute.
Because these are choice coefficients rather than target percentages, the values needed to be calibrated to match the WFRC targets.
The calibration allowed ActivitySim to match these targets exactly, and the coefficients are given in @tbl-baseline-telecommute.

```{r}
#| label: tbl-baseline-telecommute
#| tbl-cap: Telecommute Rates and Coefficients by Job Industry

targets::tar_read(comparison_by_telecommute_coeffs) %>%
	mutate(pct = label_percent()(pct)) %>% 
	rename(Industry = "name", `2019 WFRC Telecommute %` = "pct") %>%
	skbl(align = c("l", "c", "c", "c", "c")) %>%
	kable_styling() %>%
	add_header_above(c(" " = 2, "Telecommute Frequency Coefficients" = 3)) %>% 
	column_spec(2, "1.3in") %>% 
	column_spec(3:5, "0.87in")
```

Because both remote work submodels in ActivitySim are run before an individual's DAP is chosen, ActivitySim can model a "rebound effect", where individuals working remotely on any given day may be more likely to make discretionary tours.
However, because the WFRC model does not include this effect, the ActivitySim DAP model is left unchanged.
@tbl-asim-dap-model-rw-coeffs shows the coefficients of the DAP model for individuals who work remotely.

```{r}
#| label: tbl-asim-dap-model-rw-coeffs
#| tbl-cap: Daily Activity Pattern Submodel Coefficients in ActivitySim

targets::tar_read(asim_tc_dap_coeffs) %>%
	skbl(align = c("l", "c", "c", "c")) %>%
	kable_styling()
```

## Example Scenarios

With these two calibrated models, we created three model scenarios to implement and run in each model for comparison.
This is not a comprehensive list covering all potential scenario possibilities, but the scenarios identified here are intended to represent the main goals of travel demand modeling in modeling changes in travel behavior.
Change in travel behavior could arise in response to changes in land use, transportation infrastructure, and social/economic factors, and so we create three hypothetical model scenarios that each implement one of these aspects.

The first scenario involves a change in land use near the former state prison site in Draper, Utah.
Current plans for this site involve new development known as "The Point", which will add high-density housing and commercial development to the area.
This research scenario will be based on this development, but will include only the land use changes.
The actual development plans also include expansion of transit, but this will not be a part of this scenario.

The second scenario centers around a change in transportation infrastructure, namely an augmentation of commuter rail service along the Wasatch Front.
The FrontRunner, a commuter rail line connecting Provo to Ogden, is slated for expansion.
The expansion includes additional stations and increased travel speeds due to vehicle electrification.
This scenario models these changes in accordance with the planned expansion of the service.

The third scenario addresses the growing trend of remote work.
Given technological advancements and the notable surge in remote work during the COVID-19 pandemic, this scenario models a substantial increase in remote work based on projections from WFRC.

Each of these scenarios is based on the baseline 2019 scenario in the respective model, and ignores any additional expected growth or development beyond the specific changes of each scenario.
For example, the increased WFH scenario uses WFH projections from 2050, but land use and socioeconomic data from 2019.
These scenarios are therefore not realistic, but they serve as illustrative examples of the types of planning and development scenarios agencies may wish to analyze.

All three of these scenarios are coded in both the WFRC model and ActivitySim.
The results (Chapters [-@sec-landuse]--[-@sec-wfh]) describe the process of coding each scenario and analyzing them, as well as the analyses themselves.
