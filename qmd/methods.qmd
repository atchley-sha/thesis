# Methodology {#sec-methods}

{{< include _setup.qmd >}}

This paper seeks to compare methodological differences between trip- and activity-based modeling frameworks.
Both model types ...
Instead, a representative model is used for each type, and care is taken to note when results apply to trip- or activity-based models generally, and when results are specific to the models used.

The representative trip-based model is the 2019 Wasatch Front Regional Council (WFRC) travel demand model, which covers much of the Salt Lake City-Provo-Ogden, Utah Combined Statistical Area.
An ActivitySim implementation in the same study area is used as a representative activity-based model (ABM).
Both models are discussed in detail in the following sections.

Note that the focus is not on comparing model accuracy or performance, but rather on comparing the process of using each model, including the types of analyses that can be performed.
There are therefore few direct comparisons of model outputs between each type.
Instead, this research highlights the strengths and weaknesses of each model type in planning and policy analysis, and illustrates these differences.

<!-- The following sections discuss the specific models in more detail. -->

## WFRC Model

The WFRC model is implemented in the CUBE software by Bentley [@bentley_systems_cube], and is currently used by WFRC for modeling travel in the Salt Lake City, Utah area.
WFRC provided the model directly, including land use forecasts and the current long-range transportation plan.
The model is taken essentially as-is, with no changes other than those noted in [@sec-landuse; @sec-transit; @sec-wfh].

The WFRC model, like many trip-based models, requires the following inputs:

-   Land use data, including information about population, employment, and socioeconomic variables such as income, delineated by transportation analysis zone (TAZ). This is provided by WFRC directly, as an output of their land use forecasting model(s).
-   Travel skims, detailing travel time, cost, etc. between each origin-destination pair of TAZs. The WFRC model uses an iterative process of assigning volumes to the transportation network and recalculating the skims, which are used in the destination and mode choice model steps.
-   Transportation networks, including highway, transit, etc.Â networks which connect the TAZs to each other. These networks contain information such as link speed and capacity. Though the WFRC model assigns travel volumes to the network, this paper does not analyze the model's network assignment results. However, the network volumes are still used to calculate the loaded network skims.
-   Lookup tables, used in many model steps for information such as trip rates by household type. These are taken directly from the WFRC model without modification.
-   Model constants and coefficients, which some model steps such as mode choice require for calibration. These are also taken directly from the WFRC model.

@fig-wfrc-flowchart gives an overview of the WFRC model, showing broad model steps in a flowchart.
Like many trip-based models, the WFRC model follows the "four-step" approach and has main steps of trip generation, trip distribution, mode choice, and network assignment.
The model also includes a disaggregation step at the beginning where the TAZ-level data is used via lookup tables to estimate the number of households by size, income group, number of workers, and auto ownership.

![WFRC model flowchart. There is a feedback loop in the distribution step where preliminary loaded network skims are used to perform subsequent iterations of trip distribution until the distribution converges.](./../images/wfrc_flowchart.png){#fig-wfrc-flowchart fig-scap="WFRC model flowchart."}

**check this paragraph for accuracy**.
The disaggregation step takes TAZ-level socioeconomic data (such as population, number of households, and average income) and estimates the number of households belonging to each size category and income group.
Household size is categorized by the number of individuals living in a household, though notably households with ***4?*** or more individuals are grouped into a "size ***4?+***" category.
The specific income groups used in the WFRC model are given in @tbl-income-groups.

```{r}
#| label: tbl-income-groups
#| tbl-cap: income groups

targets::tar_read(income_groups) |>
  select(group, inc_range) |>
  rename("Income Group" = group, "Income Range" = inc_range) |>
	flextable()
```

***this one too***.
The WFRC model also estimates the number of workers per household and the number of vehicles owned by each household.
These models....

***also this***.
The model then estimates a joint distribution across these one-dimensional distributions (household size, income group, number of workers, and vehicle ownership).
There are ***two?*** separate joint distributions that are estimated: one across household size, income group, and vehicle ownership, and one across number of workers, income group, and vehicle ownership.
This process assigns each TAZ a certain number of e.g. 3-person, medium-income, 2-vehicle households, and a certain number of e.g. 1-worker, low-income, 1-vehicle households.
Note that the two different joint distributions are not mutually exclusive, and in fact each distribution contains the total number of households in each TAZ.

***actually, check pretty much this whole section***.
The joint distributions estimated in the disaggregation step are then used in the trip generation step to estimate the number of trips produced from each TAZ.
The trips are estimated using lookup tables which assert an average number of trips for each household type.
There are separate lookup tables for each trip purpose, and each lookup table uses one of the two joint distributions estimated in the disaggregation step.
The trip rates in the lookup tables are multiplied by the number of households in each category, and this gives a total number of trips by purpose produced in each TAZ.

The WFRC model contains the following trip purposes: Home-based work (HBW), home-based ....
The HBW and ...
purposes use the joint distribution across number of workers, income group, and vehicle ownership, and all other trip purposes use the distribution across household size, income group, and vehicle ownership.

***figure out when trip attractions are estimated and if it's part of the distribution step***.

Trip distribution uses a gravity model of the form\
$$
T_{ij} = P_i \times \frac{A_j  F_{ij}}{\displaystyle \sum_J A_j  F_{ij}},
$$\
where $T_{ij}$ is the number of trips from zone $i$ to $j$, $P_i$ is the productions at $i$, $A_j$ is the attractions at $j$, $F_{ij}$ is the cost term/function from $i$ to $j$, and $J$ is the set of all zones trips from $i$ can be attracted to.
Mode choice uses a choice model to assign a percentage of trips of each purpose to each mode.
Network assignment is done via an iterative process to equalize travel time between potential routes.

The WFRC model outputs include trip tables by purpose, mode, and time of day, as well as loaded network skims.

## ActivitySim

ActivitySim is an open-source ABM led by a consortium of transportation planning agencies.
ActivitySim is highly configurable, and many agencies have their own bespoke implementation.
This paper uses an ActivitySim implementation based on @gregory_s_macfarlane_estimation_2021, which is in turn based on the prototype configuration for the Metropolitan Transportation Commission serving the San Francisco area [@erhardt_mtcs_2011].
The exact implementation is available [on GitHub](https://github.com/byu-transpolab/wfrc_asim_scenario/tree/update-abm-illustration).

ActivitySim requires similar inputs to the WFRC model, though it does not assign traffic and so does not require any transportation networks.
However, ActivitySim does require network skims for information on travel time, cost, etc.
These skims are obtained from any network assignment process, though ActivitySim itself does not include network assignment.
A discussion and comparison of network assignment processes is outside the scope of this project, so this ActivitySim implementation uses the travel skims output from the WFRC model directly.

ActivitySim additionally requires population data at an individual level, including information such as age, household income, and home location.
Due to privacy concerns, real data is rarely used for this purpose, and a synthetic population representative of the study area is used instead.
@sec-populationsim discusses the population used in more detail.

ActivitySim, like all ABMs, simulates transportation decisions on an individual level.
ActivitySim has a hierarchical decision tree, where long-term decisions (such as auto ownership and telecommute frequency) are made first, followed by daily and tour- and trip-level decisions such as scheduling and mode choice (see @fig-asim-flowchart).
Each of these steps determines information that will be used in subsequent steps, and many steps can be turned on or off depending on what is needed for the model implementation.

![ActivitySim sub-model flowchart. Long-term decisions are made first, followed by more granular ones.](../images/abmexample.jpg){#fig-asim-flowchart fig-scap="ActivitySim sub-model flowchart."}

Most of ActivitySim's individual models are based on a multinomial logit model of the form:\
$$
P(k) = \frac{e^{V_k}}{\displaystyle \sum_{k \in K} e^{V_k}},
$$\
where $P(k)$ is the probability of choosing alternative $k$, $V_k$ is the utility of alternative $k$, and $K$ is the set of all alternatives.
The utility values are determined by....

The steps can broadly be categorized into five groups, as shown in @fig-asim-flowchart: aggregate, household/personal, daily, tour-level, and trip-level steps.
The aggregate steps mainly involve determining impedance measures between each pair of zones (travel time, distance, cost, etc.).
In this case, these impedances are supplied directly as network skims, output from the WFRC model.

The household/personal steps relate to long-term decisions that are unlikely to change quickly based on daily transportation conditions.
These steps include determining remote work status, work/school location, auto ownership, transit pass ownership, and free parking availability at work.
Much of this information can be supplied directly or explicitly modeled.
Our ActivitySim implementation does not supply any of this information directly, and explicitly models remote work status, work/school location, auto ownership, and free parking availability.
Transit pass ownership is not modeled.

The daily decisions primarily concern an individual's DAP.
ActivitySim contains a step to assign mandatory, non-mandatory, and joint tours based on personal and household information (joint tours combine both mandatory and non-mandatory activities).
For example, full-time workers are more likely to make a mandatory tour than part-time workers, all else being equal.

Once a DAP is chosen, ActivitySim creates tours for each major activity in the day.
Additionally, ActivitySim determines if an individual makes an "at-work" tour (e.g. leaving for lunch and returning to the workplace).
Each tour is scheduled and assigned a primary mode, as well as a primary destination for non-mandatory and joint tours.
The tours are then populated with trips, and ActivitySim assigns each trip a purpose, destination, time of day, and mode compatible with the tour-level assignment.

The final steps of ActivitySim are writing output trip matrices and other tables, including information on land use, persons, households, tours, and trips.
<!-- This can also include writing summary tables of the above information. -->

### PopulationSim {#sec-populationsim}

This paper uses PopulationSim [@populationsim_2023] to create a synthetic population for ActivitySim.
The synthetic population aims to be representative of the study area while maintaining privacy.
PopulationSim takes as input a "seed" of individuals and households, and populates the area with copies of these to match given control totals.

The seed sample comes from the 2019 American Community Survey Public Use Microdata Sample [@pums], which contains a sample of actual (anonymized) individuals and households at the Public Use Microdata Area (PUMA) geography (PUMAs partition the United States into areas of around 100,000 people each [@puma]).
The control totals come from two different sources: the U.S.
Census and the WFRC model.
@tbl-control-totals shows these controls as well as their geographic level and source.
PopulationSim also allows setting different weights to each control, and @tbl-control-totals gives this information as well.

```{r}
#| label: tbl-control-totals
#| tbl-cap: PopulationSim Control Totals by Geography and Source

tibble::tribble(
  ~Control, ~Geography, ~Source, ~Weight,
  "Population", "Entire Region", "Census", 5000,
  "Number of Households", "TAZ", "WFRC Model", 1000000000,
  "Household Size", "Census Tract", "Census", 10000,
  "Persons by Age Group", "Census Tract", "Census", 10000,
  "Households by Income Group", "Census Tract", "Census", 500,
  "Workers per Household", "Census Tract", "Census", 1000
) |>
  dplyr::mutate(Weight = scales::label_comma()(Weight)) |>
	flextable()
```

Most of these controls come from Census data, with only the number of households per TAZ coming from the WFRC model data.
Note also that there are many personal and household variables that are not accounted for in these controls, such as sex, vehicle ownership, internet access, etc.
These variables are not controlled for and are dependent on which seed persons or households are copied in controlling for the other variables.
However, this process is assumed to still give a representative enough estimate for the uncontrolled variables without needing to model them explicitly.

The outputs of PopulationSim include a persons and households table comprising the synthetic population, as well as summary tables.

## Initial Model Comparison/Calibration

While this research does not directly compare the outputs of ActivitySim to those of the WFRC model, it is important to ensure similar performance between the two models for meaningful analyses.
As such, a baseline scenario in both models is used in order to calibrate the ActivitySim implementation to the WFRC model.
This baseline scenario uses the 2019 WFRC model as-is.
For ActivitySim, the baseline scenario uses 2019 Census and WFRC data to create the synthetic population, and the choice models use land use data and network skims from the baseline WFRC scenario.

### Verification of the Synthetic Population

The controls for PopulationSim mostly come from the Census, as can be seen in @tbl-control-totals.
However, the WFRC model contains TAZ-level data including population and median income.
The WFRC model also has a disaggregation step that estimates the number of households by size and income group.
<!-- and number of workers -->\
This section compares the output of PopulationSim to the WFRC model on each of these variables at the TAZ level.

@fig-population-comparison shows the difference in TAZ population between PopulationSim and the WFRC data.
It is worth noting that since the number of households was controlled at the TAZ level from the WFRC data with an extremely high weight, the number of households per TAZ in the synthetic population match exactly to the WFRC data.
The average household size will therefore follow a similar error distribution to the one shown in @fig-population-comparison.

```{r}
#| label: fig-population-comparison
#| fig-cap: population comparison

targets::tar_read(comparison_pop_map)
```

The population per TAZ is similar to the WFRC data in most places, though there are some discrepancies especially near Herriman and Lehi.
Since total population is a region-level control, but number of households is a TAZ-level control, this shows PopulationSim is predicting a smaller average household size in Herriman and Lehi than the WFRC data suggests.
<!-- This may be reasonable, as these are suburban areas which are likely to have larger household sizes on average than places like Salt Lake City. -->

Income is also an important factor in travel behavior [@zegras_household_2007], and @fig-median-income-comparison shows a TAZ-level comparison of median income between the synthetic population and the WFRC data.
The synthetic population does have a lower median income than the WFRC data in many TAZs, but the error is in most cases fairly small, especially in more populated areas.
However, both the WFRC model and ActivitySim use household income *groups* rather than individual household income to inform travel decisions.
These groups are taken from the WFRC model (see @tbl-income-groups), and the groups in PopulationSim and ActivitySim were adjusted to match.
@fig-income-group-map shows the difference in number of households by income group, and this figure shows a similar trend of PopulationSim over-predicting low-income households.

```{r}
#| label: fig-median-income-comparison
#| fig-cap: med inc

targets::tar_read(comparison_med_income_map)
```

```{r}
#| label: fig-income-group-map
#| fig-cap: inc groups

targets::tar_read(comparison_inc_groups_map)
```

Income was not weighted very heavily as a control in PopulationSim (see @tbl-control-totals), and this is in part why there are discrepancies between the models.
However, the overall distribution of income is similar between the models, as @fig-median-income-density shows.
<!-- A production-ready synthetic population would match its income distribution more closely to the existing WFRC model, but for the purposes of this research the income distribution is similar enough. -->

```{r}
#| label: fig-median-income-density
#| fig-cap: inc density

targets::tar_read(comparison_inc_density_plot)
```

<!-- ***Comparison of number of workers?*** -->

### Verification and Calibration of ActivitySim {#sec-baseline-calibration}

This section compares the outputs of both models to verify that trip patterns roughly agree between them.
There are three comparisons of interest between the outputs of the two models: mode split, trip length frequency distribution, and remote work.

The initial baseline ActivitySim scenario predicted a mode split significantly different to that from the WFRC model, and so calibration efforts were needed.
We adjusted the alternative-specific constants in ActivitySim's mode choice model to better match the mode split in the WFRC model.
@tbl-mode-split compares the mode split of both models after several iterations of this calibration.
Overall, the calibration resulted in a reasonably similar mode split between the two models, though there are still discrepancies (e.g. ActivitySim is predicting about twice as many transit trips as the WFRC model).
However, further adjustment of the constants would cause their values to become unreasonably large, as ActivitySim's mode split begins converging at this point regardless of the calibration constant values (see @fig-calibration-plot).
This is likely due to the mode choice coefficients being unrepresentative of the study area.
This ActivitySim configuration is ultimately based on the San Francisco area, and so coefficients on variables such as travel time and income are calibrated for that area (hence in part why there are so many more transit trips).

***We're going to use iteration 4 of the last calibration attempt.***

```{r}
#| label: tbl-mode-split
#| tbl-cap: mode split

targets::tar_read(by_mode_split_comparison) |>
	flextable()
	# tt() %>% 
	# format_tt(escape = TRUE)
  # kbl(
  #   booktabs = TRUE,
  #   col.names = c("Purpose", "Mode", "ActivitySim predicted trips", "WFRC predicted trips", "Error", "% Error"),
  #   digits = c(0,0,0,0,0,1),
  #   align = "c"
  # ) %>%
  # kable_styling(latex_options = "scale_down") %>% 
  # column_spec(3, "3cm") %>%
  # column_spec(4, "3.5cm") %>%
  # column_spec(6, "3.7cm")
  # collapse_rows(1)
  # collapse_rows(1, valign = "middle", latex_hline = "major")
```

```{r}
#| label: fig-calibration-plot
#| fig-cap: calibration plot

targets::tar_read(asim_mode_choice_calibration_plot)
```

@fig-tlfd-comp compares the trip length frequency distribution of the two models by mode and purpose.
Both ActivitySim and the WFRC model contain destination choice models which can be adjusted to affect the distribution of trip length.
However, as the figure shows, the two models have similar TLFDs, so no adjustment was necessary.
The most significant discrepancies are with transit trips, again likely due to this configuration of ActivitySim being calibrated to San Francisco, making transit more attractive.
Note that though these distributions match well enough for the purposes of this research, further calibration would be required to create a production-ready ActivitySim implementation.

```{r}
#| label: fig-tlfd-comp
#| fig-cap: tlfd comparison

targets::tar_read(combined_by_tlfd_plot)
```

The WFRC model has basic support for predicting telecommuting and work-from-home trips.
This includes a lookup table of telecommute percentages based on job type and year.
ActivitySim also has this functionality, and can additionally use individual- and household-level variables in its predictions.
It is worth noting that both the WFRC model and ActivitySim make a distinction between "telecommuting", where an individual commutes to work some days and does not others, and "work-from-home" (or "home-based jobs" in the WFRC model), where an individual's workplace is always at their home.

The ActivitySim implementation discussed in @gregory_s_macfarlane_estimation_2021 does not include any submodels related to remote work.
However, the example ActivitySim implementation for SEMGOG *does* include these submodels, and our ActivitySim implementation takes these submodels directly from the SEMCOG example.
***Some modifications to the remote work submodels were needed for compatibility, but only included....***

Both models treat "work-from-home"/"home-based jobs" similarly.
The WFRC model's land use data contains employment by type in each TAZ, and it considers a "home-based job" as a separate job type, so these are not counted toward employment totals in trip generation and subsequent steps.
<!-- @fig-wfrc-wfh shows the distribution of home-based job percentage by TAZ in the WFRC land use data. -->\
ActivitySim has a "work from home" submodel which assigns workers work-from-home status based on personal variables such as income, sex, and education (coefficients on these variables were left unchanged from the existing configuration, see @tbl-asim-wfh-model-coeffs).
There is also a "target work-from-home percent" value that adjusts the model to reach the specified work-from-home proportion of all workers.
Individuals with work-from-home status are then prohibited from making a mandatory tour.
This target work-from-home percentage is set at 2.3%, based on a weighted average from the WFRC model data.
We made no other adjustments to the ActivitySim work-from-home submodel.

```{r}
#| label: tbl-asim-wfh-model-coeffs
#| tbl-cap: asim wfh model coeffs

targets::tar_read(asim_wfh_model_coeffs) |>
	flextable()
```

The two models differ in their approach to telecommuting, however.
The WFRC model has a lookup table of telecommuting shares based on job type (see @tbl-baseline-telecommute), including predictions for future years.
ActivitySim has a "telecommute frequency" submodel which assigns workers a telecommute status indicating the number of days they work remotely per week.
Based on this status, ActivitySim adjusts the likelihood of making a mandatory tour.
Telecommute status depends on personal variables similar to those in the work-from-home submodel by default.
Notably, the telecommute frequency submodel also includes adjustments based on an individual's distance to work.
No other changes were made to the existing variables in this submodel, and @tbl-asim-tc-model-coeffs shows the submodel coefficients.

```{r}
#| label: tbl-asim-tc-model-coeffs
#| tbl-cap: asim tc model coeffs

targets::tar_read(asim_telecommute_model_coeffs) |>
	flextable()
```

In order to calibrate ActivitySim's telecommute frequency submodel to the WFRC data, however, we added additional job type variables to ActivitySim to match those given in @tbl-baseline-telecommute.
Because these are choice coefficients rather than target percentages, the values needed to be calibrated to match the WFRC targets.
The calibration allowed ActivitySim to match these targets exactly, and the coefficients are given in @tbl-baseline-telecommute.

```{r}
#| label: tbl-baseline-telecommute
#| tbl-cap: wfrc telecommute data

targets::tar_read(comparison_by_telecommute_coeffs) |>
	flextable()
#   mutate(pct = scales::label_percent(accuracy = 0.01)(pct)) %>%
#   rename(
#     "Job Type" = name,
#     "WFRC Telecommute %" = pct
#     ) %>%
# 	tt() %>% 
# 	format_tt(escape = TRUE)
  # kbl(
  #   booktabs = TRUE,
  #   align = "c"
  # ) %>%
  # add_header_above(c(" " = 2, "ActivitySim Telecommute Utility Coefficients" = 3)) %>%
  # kable_styling()
```

Because both remote work submodels in ActivitySim are run before an individual's DAP is chosen, ActivitySim implicitly models a "rebound effect", where individuals working remotely on any given day may be more likely to make discretionary tours.
However, because the WFRC model does not include this effect, the ActivitySim DAP model is left unchanged.
@tbl-asim-dap-model-rw-coeffs shows the coefficients of the DAP model for individuals who work remotely.

```{r}
#| label: tbl-asim-dap-model-rw-coeffs
#| tbl-cap: asim dap model remote work coeffs

targets::tar_read(asim_tc_dap_coeffs) |>
	flextable() #|>
	# group_tt(j = list("Utility Coefficient" = 2:4))
```

## Example Scenarios

There are three proposed scenarios to implement and run in each model for comparison.
This is not a comprehensive list covering all potential scenario possibilities, but is taken to represent many of the types of scenarios an agency would analyze.

The first scenario involves a change in land use near the former state prison site in Draper, Utah.
Current plans for this site involve new development known as "The Point", which will add high-density housing and commercial development to the area.
This research scenario will be based on this development, but will include only the land use changes.
The actual development plans also include expansion of transit, but this will not be a part of this scenario.

The second scenario centers around an augmentation of transit service along the Wasatch Front.
The FrontRunner, a CRT line connecting Provo to Ogden, is slated for expansion.
The expansion includes additional stations and increased travel speeds due to vehicle electrification.
This scenario models these changes in accordance with the planned expansion of the service.

The third scenario addresses the growing trend of remote work.
Given technological advancements and the notable surge in remote work during the COVID-19 pandemic, this scenario models a substantial increase in remote work based on projections from WFRC.

Each of these scenarios is based on the baseline 2019 scenario in the respective model, and ignores any additional expected growth or development beyond the specific changes of each scenario.
For example, the increased WFH scenario uses WFH projections from 2050, but land use and socioeconomic data from 2019.
These scenarios are therefore not realistic, but they serve as illustrative examples of the types of planning and development scenarios agencies may wish to analyze.

All three of these scenarios are coded in both the WFRC model and ActivitySim.
The results (Chapters [-@sec-landuse]--[-@sec-wfh]) describe the process of coding each scenario and analyzing them, as well as the analyses themselves.
